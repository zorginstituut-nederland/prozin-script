{"version":3,"file":"chunks/25748.eb27380c2ec4ad981cd5.min.js","mappings":"sPAGA,MAAMA,EAAiB,EAAAC,KAAKC,OAAO,CAC/BC,KAAM,iBACNC,aACI,MAAO,CACHC,eAAgB,CAAC,EAEzB,EACAC,MAAO,QACPC,YACI,MAAO,CAAC,CAAEC,IAAK,MACnB,EACAC,YAAW,eAAEJ,IACT,MAAO,CAAC,MAAM,IAAAK,iBAAgBC,KAAKC,QAAQP,eAAgBA,GAC/D,EACAQ,cACI,MAAO,CACHC,kBAAmB,IAAM,EAAGC,QAAOC,YAC/B,MAAQC,IAAKC,GAAcF,EAAMG,UAC3BC,EAAeL,IAOrB,OAN+B,IAA3BG,EAAUG,aACVD,EAAaE,gBAAgBC,KAAKC,IAAIN,EAAUO,IAAM,EAAG,GAAI,CAAEC,KAAMf,KAAKR,OAG1EiB,EAAaO,cAAc,CAAED,KAAMf,KAAKR,OAEpCiB,EAEHQ,SAAQ,EAAGC,KAAIC,eAChB,IAAIC,EACJ,GAAID,EAAU,CACV,MAAM,IAAEb,GAAQY,EAAGV,UACba,EAAWf,EAAIgB,MACrB,GAAIhB,EAAIiB,UACAjB,EAAIiB,UAAUC,YACdN,EAAGO,aAAa,KAAclC,OAAO2B,EAAGQ,IAAKpB,EAAIQ,IAAM,IAElDR,EAAIiB,UAAUI,QACnBT,EAAGO,aAAa,KAAclC,OAAO2B,EAAGQ,IAAKpB,EAAIQ,MAGjDI,EAAGO,aAAa,KAAclC,OAAO2B,EAAGQ,IAAKpB,EAAIQ,UAGpD,CAED,MAAMc,EAA2D,QAAnDR,EAAKd,EAAIuB,OAAOd,KAAKe,aAAaC,mBAAgC,IAAPX,OAAgB,EAASA,EAAG7B,SACjGqC,IACAV,EAAGc,OAAOX,EAAUO,GACpBV,EAAGO,aAAa,KAAclC,OAAO2B,EAAGQ,IAAKL,EAAW,IAEhE,CACAH,EAAGe,gBACP,CACA,OAAO,CAAI,IAEVC,KAAM,EAGvB,EACAC,gBACI,MAAO,EACH,IAAAC,eAAc,CACVC,KAAM,8BACNtB,KAAMf,KAAKe,OAGvB,G","sources":["webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-horizontal-rule/dist/index.js"],"sourcesContent":["import { Node, mergeAttributes, nodeInputRule } from '@tiptap/core';\nimport { TextSelection, NodeSelection } from '@tiptap/pm/state';\n\nconst HorizontalRule = Node.create({\r\n    name: 'horizontalRule',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    group: 'block',\r\n    parseHTML() {\r\n        return [{ tag: 'hr' }];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['hr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setHorizontalRule: () => ({ chain, state }) => {\r\n                const { $to: $originTo } = state.selection;\r\n                const currentChain = chain();\r\n                if ($originTo.parentOffset === 0) {\r\n                    currentChain.insertContentAt(Math.max($originTo.pos - 2, 0), { type: this.name });\r\n                }\r\n                else {\r\n                    currentChain.insertContent({ type: this.name });\r\n                }\r\n                return (currentChain\r\n                    // set cursor after horizontal rule\r\n                    .command(({ tr, dispatch }) => {\r\n                    var _a;\r\n                    if (dispatch) {\r\n                        const { $to } = tr.selection;\r\n                        const posAfter = $to.end();\r\n                        if ($to.nodeAfter) {\r\n                            if ($to.nodeAfter.isTextblock) {\r\n                                tr.setSelection(TextSelection.create(tr.doc, $to.pos + 1));\r\n                            }\r\n                            else if ($to.nodeAfter.isBlock) {\r\n                                tr.setSelection(NodeSelection.create(tr.doc, $to.pos));\r\n                            }\r\n                            else {\r\n                                tr.setSelection(TextSelection.create(tr.doc, $to.pos));\r\n                            }\r\n                        }\r\n                        else {\r\n                            // add node after horizontal rule if it’s the end of the document\r\n                            const node = (_a = $to.parent.type.contentMatch.defaultType) === null || _a === void 0 ? void 0 : _a.create();\r\n                            if (node) {\r\n                                tr.insert(posAfter, node);\r\n                                tr.setSelection(TextSelection.create(tr.doc, posAfter + 1));\r\n                            }\r\n                        }\r\n                        tr.scrollIntoView();\r\n                    }\r\n                    return true;\r\n                })\r\n                    .run());\r\n            },\r\n        };\r\n    },\r\n    addInputRules() {\r\n        return [\r\n            nodeInputRule({\r\n                find: /^(?:---|—-|___\\s|\\*\\*\\*\\s)$/,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { HorizontalRule, HorizontalRule as default };\n//# sourceMappingURL=index.js.map\n"],"names":["HorizontalRule","Node","create","name","addOptions","HTMLAttributes","group","parseHTML","tag","renderHTML","mergeAttributes","this","options","addCommands","setHorizontalRule","chain","state","$to","$originTo","selection","currentChain","parentOffset","insertContentAt","Math","max","pos","type","insertContent","command","tr","dispatch","_a","posAfter","end","nodeAfter","isTextblock","setSelection","doc","isBlock","node","parent","contentMatch","defaultType","insert","scrollIntoView","run","addInputRules","nodeInputRule","find"],"sourceRoot":""}