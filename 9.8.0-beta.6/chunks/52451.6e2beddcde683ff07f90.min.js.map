{"version":3,"file":"chunks/52451.6e2beddcde683ff07f90.min.js","mappings":"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","sources":["webpack://@patternslib/patternslib/./node_modules/prosemirror-dropcursor/dist/index.js","webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-dropcursor/dist/tiptap-extension-dropcursor.esm.js"],"sourcesContent":["import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = options.width || 1;\n        this.color = options.color || \"black\";\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos), rect;\n        if (!$pos.parent.inlineContent) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2 };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            rect = { left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none; background-color: \" + this.color;\n        }\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            parentLeft = rect.left - parent.scrollLeft;\n            parentTop = rect.top - parent.scrollTop;\n        }\n        this.element.style.left = (rect.left - parentLeft) + \"px\";\n        this.element.style.top = (rect.top - parentTop) + \"px\";\n        this.element.style.width = (rect.right - rect.left) + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                target = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (target == null)\n                    return this.setCursor(null);\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n","import { Extension } from '@tiptap/core';\nimport { dropCursor } from 'prosemirror-dropcursor';\n\nconst Dropcursor = Extension.create({\r\n    name: 'dropCursor',\r\n    addOptions() {\r\n        return {\r\n            color: 'currentColor',\r\n            width: 1,\r\n            class: undefined,\r\n        };\r\n    },\r\n    addProseMirrorPlugins() {\r\n        return [\r\n            dropCursor(this.options),\r\n        ];\r\n    },\r\n});\n\nexport { Dropcursor, Dropcursor as default };\n//# sourceMappingURL=tiptap-extension-dropcursor.esm.js.map\n"],"names":["dropCursor","options","view","editorView","DropCursorView","constructor","this","cursorPos","element","timeout","width","color","class","handlers","map","name","handler","e","dom","addEventListener","destroy","forEach","removeEventListener","update","prevState","doc","state","content","size","setCursor","updateOverlay","pos","parentNode","removeChild","rect","$pos","resolve","parent","inlineContent","before","nodeBefore","after","nodeAfter","node","nodeDOM","nodeSize","nodeRect","getBoundingClientRect","top","bottom","left","right","coords","coordsAtPos","parentLeft","parentTop","offsetParent","appendChild","document","createElement","className","style","cssText","body","getComputedStyle","position","pageXOffset","pageYOffset","scrollLeft","scrollTop","height","scheduleRemoval","clearTimeout","setTimeout","dragover","event","editable","posAtCoords","clientX","clientY","inside","nodeAt","disableDropCursor","type","spec","disabled","target","dragging","slice","dragend","drop","dragleave","contains","relatedTarget","Dropcursor","Extension","addOptions","undefined","addProseMirrorPlugins"],"sourceRoot":""}